name: Build release containers and create binary release

on:
  push:
    tags:
      - '*'

jobs:
  build-linux-containers:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    strategy:
      matrix:
        library:
          - aws-lc
          - libressl
          - openssl
    steps:
      - name: Checkout from GitHub
        uses: actions/checkout@v4
      - name: Setup qemu
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Determine Image Version
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # when the branch is main, replace main with latest
          [ "$VERSION" == "main" ] && VERSION=latest
          echo "VERSION=${VERSION}-${{ matrix.library }}" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          build-args: SSL_LIBRARY=${{ matrix.library }}
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ matrix.library }},ghcr.io/${{ github.repository }}:${{ env.VERSION }}
      - name: Extract docker build artifacts
        run: |
          ./extract-artifacts.sh ghcr.io/${{ github.repository }} ${{ env.VERSION }} ${{ matrix.library }}
          docker run --platform linux/amd64 --rm --log-driver=none -a stdout -a stderr --entrypoint "/usr/sbin/nginx" "ghcr.io/${{ github.repository }}:${{ env.VERSION }}" -v > dist/version.txt
      - name: Upload artifacts 
        uses: actions/upload-artifact@v4
        with:
          name: nginx-${{ matrix.library }}
          path: |
            dist/nginx-http3-${{ matrix.library }}-linux-amd64.tar.xz
            dist/nginx-http3-${{ matrix.library }}-linux-arm64.tar.xz
            dist/version.txt
          retention-days: 1

  build-freebsd:
    runs-on: ubuntu-latest
    name: Build FreeBSD version
    steps:
      - name: Checkout from GitHub
        uses: actions/checkout@v4
      - name: Build on FreeBSD VM
        uses: vmactions/freebsd-vm@v1
        with:
          release: "13.2"
          usesh: true
          prepare: |
            pkg install -y cmake git go gtar libxml2 libxslt pcre2 rust samurai
          run: |
            ./build-freebsd.sh
      - name: Upload artifacts 
        uses: actions/upload-artifact@v4
        with:
          name: nginx-freebsd
          path: |
            nginx-http3-aws-lc-freebsd-amd64.tar.xz
          retention-days: 1

  release:
    needs:
      - build-freebsd
      - build-linux-containers
    runs-on: ubuntu-latest
    name: Create Release
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: nginx-*
      - name: Release Text
        shell: bash
        run: |
          platforms=("linux-amd64" "linux-arm64")
          libraries=("aws-lc" "libressl" "openssl")

          echo "#### Versions:" > ./release.txt

          for library in ${libraries[@]}; do
            echo "    nginx-${library}: $(cat ./nginx-${library}/version.txt)" >> ./release.txt
            echo "" >> ./release.txt
          done

          echo "" >> ./release.txt
          echo "#### SHA256 Checksums:" >> ./release.txt

          for library in ${libraries[@]}; do
            for platform in ${platforms[@]}; do
              echo "    nginx-${library}-${platform}.tar.xz: $(sha256sum ./nginx-${library}/nginx-http3-${library}-${platform}.tar.xz | cut -d ' ' -f 1)" >> ./release.txt
            done

            echo "" >> ./release.txt
          done

          echo "    nginx-aws-lc-freebsd-amd64: $(sha256sum ./nginx-freebsd/nginx-http3-aws-lc-freebsd-amd64.tar.xz | cut -d ' ' -f 1)" >> ./release.txt
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: ./release.txt
          files: |
            ./nginx-aws-lc/nginx-http3-aws-lc-linux-amd64.tar.xz
            ./nginx-aws-lc/nginx-http3-aws-lc-linux-arm64.tar.xz
            ./nginx-libressl/nginx-http3-libressl-linux-amd64.tar.xz
            ./nginx-libressl/nginx-http3-libressl-linux-arm64.tar.xz
            ./nginx-openssl/nginx-http3-openssl-linux-amd64.tar.xz
            ./nginx-openssl/nginx-http3-openssl-linux-arm64.tar.xz
            ./nginx-freebsd/nginx-http3-aws-lc-freebsd-amd64.tar.xz
